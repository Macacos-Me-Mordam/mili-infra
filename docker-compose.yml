version: "3.8"

services:
  postgres:
    image: postgres
    container_name: postgres_db
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
      - ./postgresql_setup/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - mili-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak_mili
    environment:
      KC_DB: postgres
      KC_DB_URL_HOST: postgres
      KC_DB_URL_DATABASE: keycloak
      KC_DB_URL_PORT: 5432
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
      KC_HEALTH_ENABLED: true
      KC_HTTP_ENABLED: true
      KC_PROXY: edge
    ports:
      - "8080:8080"
    volumes:
      - ./keycloak:/opt/keycloak/data/import
    command: ["start-dev", "--import-realm"]
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - mili-network
    healthcheck:
      test: ["CMD-SHELL", "(echo >  /dev/tcp/localhost/8080) > /dev/null 2>&1 || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 90s
    restart: unless-stopped

  backend:
    container_name: backend_mili
    build:
      context: ./mili-backend
    environment:
      DB_HOST: postgres
      KEYCLOAK_URL: http://keycloak:8080
    env_file:
      - ./mili-backend/.env
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    networks:
      - mili-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "(echo > /dev/tcp/localhost/3000) > /dev/null 2>&1 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

networks:
  mili-network:
    driver: bridge